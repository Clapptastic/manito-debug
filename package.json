{
  "name": "manito-debug",
  "version": "1.0.0",
  "type": "module",
  "description": "Advanced AI-powered code analysis and debugging tool with Code Knowledge Graph, multi-language support, and intelligent visualizations",
  "main": "index.js",
  "scripts": {
    "dev": "npm run check:db-extensions && concurrently --kill-others-on-fail --prefix \"[{name}]\" --names \"server,client\" \"npm run dev:server\" \"sleep 3 && npm run dev:client\"",
    "dev:open": "concurrently --kill-others-on-fail --prefix \"[{name}]\" --names \"server,client,browser\" \"npm run dev:server\" \"sleep 3 && npm run dev:client\" \"sleep 5 && node scripts/open-browser.js\"",
    "dev:client": "cd client && npm run dev",
    "dev:server": "cd server && npm run dev",
    "dev:core": "cd core && npm run dev",
    "start": "cd server && npm start",
    "start:fullstack": "./start-fullstack.sh",
    "start:prod": "./scripts/start-prod.sh",
    "start:dev": "./scripts/start-dev.sh",
    "build": "npm run build:client && npm run build:server && npm run build:core",
    "build:client": "cd client && npm run build",
    "build:server": "cd server && npm run build",
    "build:core": "cd core && npm run build",
    "build:docker": "./scripts/docker-build-push.sh",
    "test": "npm run test:core && npm run test:client && npm run test:server && npm run test:e2e",
    "test:core": "cd core && npm test",
    "test:client": "cd client && npm run test:run",
    "test:server": "cd server && npm test",
    "test:watch": "concurrently --kill-others-on-fail --prefix \"[{name}]\" --names \"core,client,server\" \"npm run test:core -- --watch\" \"npm run test:client -- --watch\" \"npm run test:server -- --watch\"",
    "test:e2e": "node scripts/e2e-test-suite.js",
    "test:comprehensive": "node scripts/comprehensive-e2e-test.js",
    "test:advanced": "node scripts/advanced-e2e-test.js",
    "test:integration": "node scripts/test-client-server-integration.js",
    "test:dynamic-ports": "node scripts/test-dynamic-port-management.js",
    "test:port-manager": "node scripts/test-dynamic-port-manager.js",
    "test:fullstack-ports": "node scripts/test-fullstack-dynamic-ports.js",
    "test:email-validation": "node scripts/test-email-validation.js",
    "test:database": "node scripts/test-database-functionality.js",
    "test:upload": "node scripts/test-upload-functionality.js",
    "test:websocket": "node scripts/test-websocket.js",
    "test:ai-analysis": "node scripts/test-ai-analysis.js",
    "test:scanner": "node scripts/test-scanner-audit.js",
    "test:routing": "node scripts/test-routing.js",
    "test:search": "node scripts/test-search-debug.js",
    "test:scan-error": "node scripts/test-scan-error.js",
    "test:client-scan": "node scripts/test-client-scan.js",
    "test:port-conflict": "node scripts/test-port-conflict-resolution.js",
    "test:port-management": "node scripts/test-port-management.js",
    "test:functionality": "node scripts/test-functionality.js",
    "test:fullstack-debug": "node scripts/test-fullstack-debug.js",
    "test:audit-integration": "node scripts/audit-frontend-backend-integration.js",
    "setup": "node scripts/setup-fullstack.js",
    "setup:ensure": "node scripts/ensure-fullstack-setup.js",
    "setup:interactive": "node scripts/interactive-dev.js",
    "check:db-extensions": "node scripts/check-database-extensions.js",
    "check:vscode": "node scripts/check-vscode.js",
    "check:health": "node scripts/production-health-check.js",
    "check:progress": "node scripts/calculate-progress.js",
    "check:status": "node scripts/update-status.js",
    "monitor": "node scripts/monitor-system.js",
    "monitor:fullstack": "node scripts/monitor-fullstack.js",
    "deploy": "npm run build && npm run deploy:docker",
    "deploy:docker": "./scripts/docker-build-push.sh",
    "deploy:production": "./scripts/deploy-production.sh",
    "deploy:dev": "./scripts/dev-docker.sh",
    "install:extension": "node scripts/install-extension.js",
    "open:browser": "node scripts/open-browser.js",
    "clean": "rm -rf node_modules package-lock.json && rm -rf client/node_modules client/package-lock.json && rm -rf server/node_modules server/package-lock.json && rm -rf core/node_modules core/package-lock.json",
    "clean:install": "npm run clean && npm install",
    "clean:build": "npm run clean:install && npm run build",
    "lint": "npm run lint:client && npm run lint:server && npm run lint:core",
    "lint:client": "cd client && npm run lint",
    "lint:server": "cd server && npm run lint",
    "lint:core": "cd core && npm run lint",
    "format": "npm run format:client && npm run format:server && npm run format:core",
    "format:client": "cd client && npm run format",
    "format:server": "cd server && npm run format",
    "format:core": "cd core && npm run format",
    "docs": "npm run docs:generate && npm run docs:serve",
    "docs:generate": "echo 'Documentation generation script'",
    "docs:serve": "echo 'Documentation serving script'",
    "security": "npm audit && npm run security:scan",
    "security:scan": "node scripts/security-hardening.js",
    "docker": "docker-compose up -d",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up -d",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker system prune -f && docker volume prune -f",
    "railway": "railway up",
    "railway:deploy": "railway up --detach",
    "railway:logs": "railway logs",
    "railway:status": "railway status",
    "preview": "npm run build && npm run preview:client",
    "preview:client": "cd client && npm run preview",
    "analyze": "npm run analyze:bundles && npm run analyze:dependencies",
    "analyze:bundles": "cd client && npm run analyze",
    "analyze:dependencies": "npm ls --depth=0",
    "ci": "npm run clean:install && npm run test && npm run build && npm run security",
    "ci:test": "npm run test",
    "ci:build": "npm run build",
    "ci:deploy": "npm run deploy:production"
  },
  "keywords": [
    "code-analysis",
    "debugging",
    "static-analysis",
    "dependency-analysis",
    "ai-assisted",
    "code-knowledge-graph",
    "multi-language",
    "visualization",
    "performance-optimization",
    "ci-cd",
    "docker",
    "railway"
  ],
  "author": "ManitoDebug Team",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  },
  "workspaces": [
    "client",
    "server",
    "core"
  ],
  "dependencies": {
    "@noble/hashes": "^1.8.0",
    "@supabase/supabase-js": "^2.55.0",
    "dezalgo": "^1.0.4",
    "humanize-ms": "^2.0.0",
    "jwa": "^2.0.1",
    "node-fetch": "^3.3.2",
    "node-int64": "^0.4.0",
    "strip-bom": "^5.0.0",
    "tailwindcss-animate": "^1.0.7"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/manito-debug.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/manito-debug/issues"
  },
  "homepage": "https://github.com/your-username/manito-debug#readme"
}
