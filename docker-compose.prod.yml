version: '3.8'

services:
  manito-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: manito-debug-prod
    ports:
      - "3000-3999:3000-3999"
      - "5432-5439:5432-5439"
      - "6379-6389:6379-6389"
      - "9090-9099:9090-9099"
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
      - ENABLE_DYNAMIC_PORTS=true
      - PORT_MANAGER_STRATEGY=conservative
      - PORT_HEALTH_CHECK_TIMEOUT=5000
      - PORT_MAX_RETRIES=5
      - PORT_AUTO_REASSIGN=false
      # Port ranges for dynamic assignment
      - SERVER_PORT_RANGE_START=3000
      - SERVER_PORT_RANGE_END=3999
      - CLIENT_PORT_RANGE_START=3000
      - CLIENT_PORT_RANGE_END=3999
      - DATABASE_PORT_RANGE_START=5432
      - DATABASE_PORT_RANGE_END=5439
      - REDIS_PORT_RANGE_START=6379
      - REDIS_PORT_RANGE_END=6389
      - MONITORING_PORT_RANGE_START=9090
      - MONITORING_PORT_RANGE_END=9099
      # Email Configuration - Ensures manito.ai emails are accepted
      - ALLOWED_EMAIL_DOMAINS=manito.ai,manito.com,gmail.com,yahoo.com,outlook.com,hotmail.com
      # Database configuration
      - POSTGRES_USER=manito_prod
      - POSTGRES_PASSWORD=manito_prod_password
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=manito_prod
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://:manito_redis_password@redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health", "||", "curl", "-f", "http://localhost:3001/api/health", "||", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: manito-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - manito-prod
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: manito-postgres-prod
    environment:
      - POSTGRES_USER=manito_prod
      - POSTGRES_PASSWORD=manito_prod_password
      - POSTGRES_DB=manito_prod
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U manito_prod -d manito_prod"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: manito-redis-prod
    command: redis-server --protected-mode no --bind 0.0.0.0 --port 6379 --requirepass manito_redis_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=manito_redis_password
    volumes:
      - redis_data:/data
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "manito_redis_password", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  prometheus:
    image: prom/prometheus:latest
    container_name: manito-prometheus-prod
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:latest
    container_name: manito-grafana-prod
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - manito-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  manito-network:
    driver: bridge