name: Deploy Docker

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-deploy:
    name: Build and Deploy Docker
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Validate required secrets
      run: |
        echo "✅ Validating deployment secrets..."
        if [ "${{ secrets.DOCKERHUB_TOKEN }}" != "" ] && [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
          echo "❌ DOCKERHUB_TOKEN provided but DOCKERHUB_USERNAME missing"
          exit 1
        fi
        echo "✅ Docker deployment secrets validated"

    - name: Checkout code
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v4.1.1

    - name: Setup Node.js
      uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    - name: Log in to Container Registry
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-

    - name: Build and push Docker image
      uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
      with:
        context: .
        file: ./Dockerfile.prod
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Scan Docker image for vulnerabilities
      uses: aquasecurity/trivy-action@d710430a6722f083d3fa7300b049c37a8cb8a965 # v0.14.0
      with:
        image-ref: ${{ steps.meta.outputs.tags }}
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@1b1aada464948af03b950897e5eb522f92603cc2 # v3.24.9
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Login to Docker Hub (if configured)
      if: ${{ secrets.DOCKERHUB_TOKEN != '' }}
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push to Docker Hub (if configured)
      if: ${{ secrets.DOCKERHUB_TOKEN != '' }}
      run: |
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }} ${{ secrets.DOCKERHUB_USERNAME }}/manito-debug:${{ steps.meta.outputs.version }}
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/manito-debug:${{ steps.meta.outputs.version }}

    - name: Deploy to production server
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Deploying to production server..."
        # Add your production deployment logic here
        # This could be deploying to a VPS, cloud provider, etc.
